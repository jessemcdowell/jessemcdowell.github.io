<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design on Jesse Builds Software</title>
    <link>http://localhost:1313/tags/design/</link>
    <description>Recent content in Design on Jesse Builds Software</description>
    <generator>Hugo</generator>
    <language>en-CA</language>
    <lastBuildDate>Mon, 24 Jun 2024 12:02:43 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Pragmatic Potato Tech Stack</title>
      <link>http://localhost:1313/posts/2024-06-24-pragmatic-potato-tech-stack/</link>
      <pubDate>Mon, 24 Jun 2024 12:02:43 +0000</pubDate>
      <guid>http://localhost:1313/posts/2024-06-24-pragmatic-potato-tech-stack/</guid>
      <description>I recently launched my new company, Pragmatic Potato Software Inc. The creation of a company itself is pretty easy, but setting up everything you need to do business can become overwhelming quickly. There are a lot of compelling options available, each promising the moon. It&amp;rsquo;s not that simple though.&#xA;I&amp;rsquo;m going to be writing about the technology stack I&amp;rsquo;m using to run my company, and why I made the choices I did.</description>
    </item>
    <item>
      <title>Cross-Cutting Concerns - Ten Approaches</title>
      <link>http://localhost:1313/posts/2024-05-27-cross-cutting-concerns/</link>
      <pubDate>Mon, 27 May 2024 13:18:08 +0000</pubDate>
      <guid>http://localhost:1313/posts/2024-05-27-cross-cutting-concerns/</guid>
      <description>One often (and ironically) repeated rule in programming is: don&amp;rsquo;t repeat yourself. We repeat it so much we even have an abbreviation: DRY. There are good reasons for this advice. Duplicating and modifying code can be a quick and easy way to get a feature done, but it can also lead to problems over time. It&amp;rsquo;s harder to understand code when the valuable logic is mixed with reams of low-value boilerplate.</description>
    </item>
    <item>
      <title>The True Cost of Dependencies</title>
      <link>http://localhost:1313/posts/2024-03-27-the-true-cost-of-dependencies/</link>
      <pubDate>Wed, 27 Mar 2024 15:35:10 +0000</pubDate>
      <guid>http://localhost:1313/posts/2024-03-27-the-true-cost-of-dependencies/</guid>
      <description>I used to use Getform for a contact form on my consulting company website. I recently received an email from them announcing that their free tier was dropping from 50 submissions per month to a lifetime limit of 25. This makes it useless for anything more than a trial, and their lowest tier is a more expensive than other similar options.&#xA;I&amp;rsquo;m not here to complain about companies taking back free offerings.</description>
    </item>
    <item>
      <title>Using Architectural Decision Records</title>
      <link>http://localhost:1313/posts/2023-11-21-using-architectural-decision-records/</link>
      <pubDate>Tue, 21 Nov 2023 17:51:51 +0000</pubDate>
      <guid>http://localhost:1313/posts/2023-11-21-using-architectural-decision-records/</guid>
      <description>Architectural Decision Records are a simple technique that promotes good architectural thinking and better collaboration. They don&amp;rsquo;t need to be big or complicated to be effective, but they do take some time, and are yet another step between setting goals and delivering value. If you use them in the right circumstances they can be a big help.&#xA;What is an Architectural Decision Record? An Architectural Decision Record (often abbreviated ADR) is just as the name implies: a document that describes an architectural decision.</description>
    </item>
    <item>
      <title>Getting Unstuck Without a Rubber Duck</title>
      <link>http://localhost:1313/posts/2023-10-03-getting-unstuck-without-a-rubber-duck/</link>
      <pubDate>Tue, 03 Oct 2023 18:03:27 +0000</pubDate>
      <guid>http://localhost:1313/posts/2023-10-03-getting-unstuck-without-a-rubber-duck/</guid>
      <description>Building software is a mostly creative endeavour, and as such, it sometimes resists progress. No matter how hard you try to push forward, if you are truly stuck, continuing on the same path is unlikely to work. Fortunately, there are a few different tricks you can use to get going again.&#xA;Take a rest The easiest way I&amp;rsquo;ve found to get back on track is to take a break. When in the office this was often making a cup of tea or eating a snack in the break room.</description>
    </item>
    <item>
      <title>Choosing Powerful Names</title>
      <link>http://localhost:1313/posts/2023-09-18-choosing-powerful-names/</link>
      <pubDate>Mon, 18 Sep 2023 12:44:36 +0000</pubDate>
      <guid>http://localhost:1313/posts/2023-09-18-choosing-powerful-names/</guid>
      <description>A junior developer needs to strengthen their technical skills to advance. An intermediate developer needs to strengthen their organizational skills to advance. Senior developers need to master these and also demonstrate that they can move multiple teams forward together. Influencing people (and especially developers) is no easy task, but a positive reputation can do a lot of the heavy lifting. One of the easiest ways to amplify your reputation is to put some extra effort in when choosing a name.</description>
    </item>
    <item>
      <title>My Architectural Report Template</title>
      <link>http://localhost:1313/posts/2023-08-08-my-architectural-report-template/</link>
      <pubDate>Tue, 08 Aug 2023 12:45:13 +0000</pubDate>
      <guid>http://localhost:1313/posts/2023-08-08-my-architectural-report-template/</guid>
      <description>As an architect I&amp;rsquo;ve been asked to answer a lot of hard questions. I used to waste time figuring out how to structure my answers, preventing me from getting into a good flow sooner. Now I have a simple template that is easy to use, easy to read, and saves me that wasted time up front.&#xA;This template works for simple reports that are only a couple of pages, but can easily be adjusted or expanded for more complicated or much larger documents.</description>
    </item>
    <item>
      <title>Design by Dogma Antipattern</title>
      <link>http://localhost:1313/posts/2023-07-30-design-by-dogma-antipattern/</link>
      <pubDate>Sun, 30 Jul 2023 13:41:17 +0000</pubDate>
      <guid>http://localhost:1313/posts/2023-07-30-design-by-dogma-antipattern/</guid>
      <description>Always use a NoSQL database so your app can scale.&#xA;NoSQL databases can be more scalable, but schema-on-read has other drawbacks. NoSQL databases are much less capable of transactional changes. Relationships are difficult or impossible. Designing schemas to be efficient is much harder, and requires more up-front knowledge about your problem. NoSQL databases are sometimes the right tool for the job, but they are not the right tool for every job.</description>
    </item>
    <item>
      <title>Sustainable Errors</title>
      <link>http://localhost:1313/posts/2023-05-29-sustainable-errors/</link>
      <pubDate>Mon, 29 May 2023 09:57:05 +0000</pubDate>
      <guid>http://localhost:1313/posts/2023-05-29-sustainable-errors/</guid>
      <description>Making a program work for the happy path is not always easy, but given enough time I believe pretty much anyone could do it. When a professional takes on the task however they will make it work for more than just the happy path, and do it with code that is easy to debug, and easy for others to understand and change. Since so much of what we end up dealing with are exceptional flows, we need a concise way to deal with them.</description>
    </item>
    <item>
      <title>When to Add an ORM Tool</title>
      <link>http://localhost:1313/2011/01/when-to-add-an-orm-tool/</link>
      <pubDate>Mon, 03 Jan 2011 12:33:03 +0000</pubDate>
      <guid>http://localhost:1313/2011/01/when-to-add-an-orm-tool/</guid>
      <description>I&amp;rsquo;m working on the code that parses VCalendar data so that it can be processed. I&amp;rsquo;m copying the data I care about into a simple data structure that can represent a calendar request in any format. Any logic that interacts with calendar requests would use this internal structure. I want it to be simple, only having the stuff that I need, but I don&amp;rsquo;t want to completely re-invent the wheel either, so I will use the VCalendar format as a guideline.</description>
    </item>
    <item>
      <title>Invitations and the VCard Format</title>
      <link>http://localhost:1313/2010/12/invitations-and-the-vcard-format/</link>
      <pubDate>Thu, 16 Dec 2010 12:59:22 +0000</pubDate>
      <guid>http://localhost:1313/2010/12/invitations-and-the-vcard-format/</guid>
      <description>My next goal for the Themis project is to parse an invitation from an email. I am starting with invitations generated by MS Outlook because that&amp;rsquo;s my target audience, but a peak inside of a Google Calendar invitation gives me hope that I&amp;rsquo;ll be able to support multiple calendars without much trouble.&#xA;Outlook invitations are sent in the VCalendar format, content type &amp;ldquo;text/calendar&amp;rdquo;. The standard was published as RFC 2445 in 1998.</description>
    </item>
    <item>
      <title>Themis: System Design</title>
      <link>http://localhost:1313/2010/09/themis-system-design/</link>
      <pubDate>Tue, 14 Sep 2010 22:29:40 +0000</pubDate>
      <guid>http://localhost:1313/2010/09/themis-system-design/</guid>
      <description>I&amp;rsquo;m charging forward on the Shared Resource Schedule Service. There are a lot of things I&amp;rsquo;m getting into place before I start writing code. Don&amp;rsquo;t try to tell me that I&amp;rsquo;m not being agile either, you always need to design a little to write good code. The key to being agile is designing only as much as you need, and being prepared to change your mind later.&#xA;The Name The first order of business was to choose a name.</description>
    </item>
    <item>
      <title>Shared Resource Service Requirements</title>
      <link>http://localhost:1313/2010/08/shared-resource-service-requirements/</link>
      <pubDate>Sun, 08 Aug 2010 21:12:53 +0000</pubDate>
      <guid>http://localhost:1313/2010/08/shared-resource-service-requirements/</guid>
      <description>I want to start my project by dividing up the various things the system needs to do, then put them into the order I plan to approach them. I want to start with requirements that are the most risky and most important to success first, and work my way down the list until I finish with items that are neither risky nor important.&#xA;This approach gives me several advantages. It&amp;rsquo;s not an issue in this case since I don&amp;rsquo;t have any deadlines to meet, but if this were a professional project and a deadline had to be pushed up, I am more likely to have a product that does the most essential things.</description>
    </item>
  </channel>
</rss>
